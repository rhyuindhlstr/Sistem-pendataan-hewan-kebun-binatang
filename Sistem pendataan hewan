import csv

FILE_NAME: 'Finaldata.csv'

class Animal:
    def __init__(self, name, species, age):
        self.name = name.strip().lower()  # Normalize name
        self.species = species.strip().lower()  # Normalize species
        self.age = int(age)

    def __repr__(self):
        return f"Animal({self.name.title()}, {self.species.title()}, {self.age})"

class Zoo:
    def __init__(self):
        self.animal_list = []

    def add_animal(self, name, species, age):
        animal = Animal(name, species, age)
        self.animal_list.append(animal)
        print(f"Added: {animal}")

    def view_animals(self):
        if not self.animal_list:
            print("No animals available.")
        else:
            for animal in self.animal_list:
                print(f"Name: {animal.name.title()}, Species: {animal.species.title()}, Age: {animal.age}")

    def update_animal(self, name, species, age):
        found = False
        for animal in self.animal_list:
            if animal.name == name.strip().lower():
                animal.species = species.strip().lower()
                animal.age = int(age)
                print(f"Updated: {animal}")
                found = True
                break
        if not found:
            print(f"Animal with name '{name}' not found.")

    def delete_animal(self, name):
        found = False
        for animal in self.animal_list:
            if animal.name == name.strip().lower():
                self.animal_list.remove(animal)
                print(f"Deleted: {animal}")
                found = True
                break
        if not found:
            print(f"Animal with name '{name}' not found.")

    def search_animal_by_name(self, name):
        name = name.strip().lower()
        for animal in self.animal_list:
            if animal.name == name:
                return animal
        return None

    def search_animal_by_species(self, species):
        species = species.strip().lower()
        for animal in self.animal_list:
            if animal.species == species:
                return animal
        return None

    def import_data_csv(self, filename):
        try:
            with open(filename, 'r', newline='') as csvfile:
                reader = csv.DictReader(csvfile)
                data = list(reader)
                for row in data:
                    self.add_animal(row['Hewan'], row['Spesies'], row['Umur'])
            print("File successfully imported.")
        except FileNotFoundError:
            print(f"File '{filename}' not found.")
        except Exception as e:
            print(f"An error occurred while importing the file: {e}")

    def export_data_csv(self, filename):
        try:
            with open(filename, 'w', newline='', encoding='utf-8') as file:
                fieldnames = ['Hewan', 'Spesies', 'Umur']
                writer = csv.DictWriter(file, fieldnames=fieldnames, delimiter=';')
                writer.writeheader()
                for animal in self.animal_list:
                    writer.writerow({'Hewan': animal.name.title(), 'Spesies': animal.species.title(), 'Umur': animal.age})
            print(f"File '{filename}' has been saved successfully.")
        except IOError as e:
            print(f"Failed to save file '{filename}'. Error: {e}")

def main():
    zoo = Zoo()
    while True:
        print("\nMenu:")
        print("1. Import File CSV")
        print("2. View Animals")
        print("3. Add Animal")
        print("4. Update Animal")
        print("5. Delete Animal")
        print("6. Search Animal Data")
        print("7. Export File CSV")
        print("8. Exit")

        choice = input("Choose an option: ")

        if choice == "1":
            filename = input("Enter CSV filename: ")
            zoo.import_data_csv(filename)
        elif choice == "2":
            zoo.view_animals()
        elif choice == "3":
            name = input("Enter animal name: ")
            species = input("Enter animal species: ")
            age = input("Enter animal age: ")
            zoo.add_animal(name, species, age)
        elif choice == "4":
            name = input("Enter animal name to update: ")
            species = input("Enter new animal species: ")
            age = input("Enter new animal age: ")
            zoo.update_animal(name, species, age)
        elif choice == "5":
            name = input("Enter animal name to delete: ")
            zoo.delete_animal(name)
        elif choice == "6":
            search_choice = input("Search by:\n1. Name\n2. Species\nChoose an option: ")
            if search_choice == "1":
                name = input("Enter animal name: ")
                animal = zoo.search_animal_by_name(name)
                if animal:
                    print(f"Animal found: {animal}")
                else:
                    print("Animal not found")
            elif search_choice == "2":
                species = input("Enter animal species: ")
                animal = zoo.search_animal_by_species(species)
                if animal:
                    print(f"Animal found: {animal}")
                else:
                    print("Animal not found")
        elif choice == "7":
            filename = input("Enter CSV filename to export: ")
            zoo.export_data_csv(filename)
        elif choice == "8":
            print("Exiting the program...")
            break
        else:
            print("Invalid option. Please choose again.")

main()
